buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "io.freefair.gradle:lombok-plugin:4.1.6"
    }
}

apply plugin: 'java'
apply plugin: 'application'
//See https://www.baeldung.com/lombok-ide for how to configure intellij to work with lombok
apply plugin: "io.freefair.lombok"
apply plugin: 'jacoco'
apply plugin: 'distribution'

mainClassName = 'net.nahknarmi.arch.Bootstrap'
sourceCompatibility = 1.8
targetCompatibility = 1.8
version = '1.0'

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
}

dependencies {
    //Guava
    implementation 'com.google.guava:guava:28.2-jre'

    //Structurizr
    implementation 'com.structurizr:structurizr-client:1.3.3'
    implementation 'com.google.code.gson:gson:2.8.6'

    //Yaml
    implementation 'org.yaml:snakeyaml:1.25'

    //Command line arguments
    implementation 'info.picocli:picocli:4.1.4'
    annotationProcessor 'info.picocli:picocli-codegen:4.1.4'

    //vavr
    implementation 'io.vavr:vavr:0.10.2'

    //Schema Validation
    implementation 'com.networknt:json-schema-validator:1.0.29'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.10.2'

    //logging
    implementation 'org.slf4j:slf4j-nop:1.7.30'

    //Testing
    //Makesure hamcrest is above junit see - https://stackoverflow.com/questions/7869711/getting-nosuchmethoderror-org-hamcrest-matcher-describemismatch-when-running
    testImplementation 'org.hamcrest:hamcrest-all:1.3'
    testImplementation 'org.mockito:mockito-all:2.0.2-beta'
    testImplementation 'junit:junit:4.13'
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.8
            }
            excludes = [
                    'net.nahknarmi.arch.Bootstrap',
            ]
        }
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
        csv.enabled false
    }
}

check.dependsOn jacocoTestCoverageVerification

plugins.withType(DistributionPlugin) {
    distTar {
        compression = Compression.GZIP
        extension = 'tar.gz'
    }
}
